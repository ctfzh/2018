  
  
  
  
  移动设备配置
    视口<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    user-scalable=no      不允许缩放
  
  
  布局容器
    .container 类用于固定宽度并支持响应式布局的容器。	
	.container-fluid 类用于 100% 宽度，占据全部视口（viewport）的容器。
  
  栅格系统
    超小屏幕手机(<768px)	小屏幕平板(≥768px)	中等屏幕桌面显示器(≥992px)	大屏幕大桌面显示器(≥1200px)
    .col-xs-	            .col-sm-	        .col-md-	                .col-lg-
  
  
  列偏移
    使用 .col-md-offset-* 类可以将列向右侧偏移。这些类实际是通过使用 * 选择器为当前元素增加了左侧的边距（margin）。
    例如，.col-md-offset-4 类将 .col-md-4 元素向右侧偏移了4个列（column）的宽度。
  
  
  嵌套列
    为了使用内置的栅格系统将内容再次嵌套，可以通过添加一个新的 .row 元素和一系列 .col-sm-* 元素到已经存在的 .col-sm-* 元素内。
    被嵌套的行（row）所包含的列（column）的个数不能超过12（其实，没有要求你必须占满12列）。
  
  
  
  
  
  
  
  
  
  
  
  页面主体               注：文本实用类标签和类
  
  标题  h1到h6的类
	<h1>~<h6>     .h1~.h6
	  
	<mark></mark>                                         文本加背景色
	<del></del>                                           文本划横线,删除
	<u></u>                                               文本加下划线
	<small></small>   或用类    .small                    小号文本，淡一点颜色的类
	<strong></strong>                                     突出显示（加粗） 
	<em></em>                                             斜体
  
  
  对齐
    <p class="text-left"></p>                             左对齐
    <p class="text-center"></p>                           右对齐
    <p class="text-right"></p>                            居中
    <p class="text-justify"></p>
    <p class="text-nowrap"></p>
  
  
  改变大小写
	<p class="text-lowercase"></p>                        全小写
	<p class="text-uppercase"></p>                        全大写
	<p class="text-capitalize"></p>                       首字母大写
  
  
  缩略语
    <abbr title="attribute">attr</abbr>                   鼠标移入attr就会显示attribute
  
  
  地址
    <address></address>        
  
  
  列表  
  无序列表
    <ul>
	  <li>...</li>
	</ul>
  
  有序列表
	<ol>
	  <li>...</li>
	</ol>
  
  无样式列表
    .list-unstyled
  
  内联列表
    .inline-block
  
  描述性短语列表
	<dl>
	  <dt>...</dt>
	  <dd>...</dd>
	</dl>
  
  水平排列的描述
	<dl class="dl-horizontal">
	  <dt>...</dt>
	  <dd>...</dd>
	</dl>
  
  自动截断
	通过 text-overflow 属性，水平排列的描述列表将会截断左侧太长的短语。
	在较窄的视口（viewport）内，列表将变为默认堆叠排列的布局方式。
  
  
  
  
  
  
  
  
  
  表格
	<table class="table"></table>
  
  
  条纹状表格
	通过 .table-striped 类可以给 <tbody> 之内的每一行增加斑马条纹样式。
    注：条纹状表格是依赖 :nth-child CSS 选择器实现的，而这一功能不被 Internet Explorer 8 支持。
  
  
  带边框的表格
	添加 .table-bordered 类为表格和其中的每个单元格增加边框。
  
   
  鼠标悬停
	通过添加 .table-hover 类可以让 <tbody> 中的每一行对鼠标悬停状态作出响应。
  
  
  紧缩表格
	通过添加 .table-condensed 类可以让表格更加紧凑，单元格中的内补（padding）均会减半。
  
  
  状态类
	通过这些状态类可以为行或单元格设置颜色。
  
  
  响应式表格
	将任何 .table 元素包裹在 .table-responsive 元素内，即可创建响应式表格，其会在小屏幕设备上（小于768px）水平滚动。
	当屏幕大于 768px 宽度时，水平滚动条消失。
  
	<div class="table-responsive">
	  <table class="table">
		...
	  </table>
	</div>
  
  注：Firefox 和 fieldset 元素
	Firefox 浏览器对 fieldset 元素设置了一些影响 width 属性的样式，导致响应式表格出现问题。
	除非使用我们下面提供的针对 Firefox 的 hack 代码，否则无解：
  
    @-moz-document url-prefix() {
	    fieldset { display: table-cell; }
	}
  
  
  
  
  
  
  
  
  表单
	单独的表单控件会被自动赋予一些全局样式。所有设置了 .form-control 类的 <input>、<textarea> 和 <select> 元素
	都将被默认设置宽度属性为 width: 100%;。 将 label 元素和前面提到的控件包裹在 .form-group 中可以获得最好的排列。
  
  上传文件控件
  
  
  注：不要将表单组合输入框组混合使用
	  不要将表单组直接和输入框组混合使用。建议将输入框组嵌套到表单组中使用。
  
  
  内联表单
	为 <form> 元素添加 .form-inline 类可使其内容左对齐并且表现为 inline-block 级别的控件。
	只适用于视口（viewport）至少在 768px 宽度时（视口宽度再小的话就会使表单折叠）。
  
  注：需要手动设置宽度
	在 Bootstrap 中，输入框和单选/多选框控件默认被设置为 width: 100%; 宽度。在内联表单，我们将这些元素的宽度设置为 width: auto;，
	因此，多个控件可以排列在同一行。根据你的布局需求，可能需要一些额外的定制化组件。
  
  
  注：一定要添加 label 标签
	如果你没有为每个输入控件设置 label 标签，屏幕阅读器将无法正确识别。对于这些内联表单，你可以通过为 label 设置 .sr-only 类将其隐藏。
  
  
  水平排列的表单
	通过为表单添加 .form-horizontal 类，并联合使用 Bootstrap 预置的栅格类，可以将 label 标签和控件组水平并排布局。这样做将改变 .form-group 的行为，
	使其表现为栅格系统中的行（row），因此就无需再额外添加 .row 了。
  
  
  被支持的控件
	输入框
		包括大部分表单控件、文本输入域控件，还支持所有 HTML5 类型的输入控件：
			text、password、datetime、datetime-local、date、month、time、week、number、email、url、search、tel 和 color。
  
  注：  必须添加类型声明
		只有正确设置了 type 属性的输入控件才能被赋予正确的样式。
  
  
  注：输入控件组
	  如需在文本输入域 <input> 前面或后面添加文本内容或按钮控件，请参考输入控件组。
  
  
  文本域
	支持多行文本的表单控件。可根据需要改变 rows 属性。
	<textarea class="form-control" rows="3"></textarea>
  
  
  多选和单选框
	多选框（checkbox）用于选择列表中的一个或多个选项，而单选框（radio）用于从多个选项中只选择一个。
	设置了 disabled 属性的单选或多选框都能被赋予合适的样式。对于和多选或单选框联合使用的 <label> 标签，
	如果也希望将悬停于上方的鼠标设置为“禁止点击”的样式，
	请将 .disabled 类赋予 .radio、.radio-inline、.checkbox、.checkbox-inline 或 <fieldset>。
  
  
  内联单选和多选框
	通过将 .checkbox-inline 或 .radio-inline 类应用到一系列的多选框（checkbox）或单选框（radio）控件上，可以使这些控件排列在一行。
  
  
  下拉列表（select）
    使用默认选项或添加 multiple 属性可以同时显示多个选项。
  
  
  静态控件
	如果需要在表单中将一行纯文本和 label 元素放置于同一行，为 <p> 元素添加 .form-control-static 类即可。
  
  
  输入框   被禁用的输入框
  
  
  被禁用的 fieldset
	为<fieldset> 设置 disabled 属性,可以禁用 <fieldset> 中包含的所有控件。
  注：<a> 标签的链接功能不受影响     虽然 Bootstrap 会将这些样式应用到所有浏览器上，Internet Explorer 11 及以下浏览器中
      的 <fieldset> 元素并不完全支持 disabled 属性。因此建议在这些浏览器上通过 JavaScript 代码来禁用 <fieldset>。
  
  
  只读输入框
	为输入框设置 readonly 属性可以禁止用户输入，并且输入框的样式也是禁用状态。
  
  
  校验状态   添加额外的图标
  
  图标、label 和输入控件组
	注：
		对于不带有 label 标签的输入框以及右侧带有附加组件的输入框组，需要手动为其图标定位。为了让所有用户都能访问你的网站，
		我们强烈建议为所有输入框添加 label 标签。如果你不希望将 label 标签展示出来，可以通过添加 sr-only 类来实现。如果的确不能添加 label 标签，
		请调整图标的 top 值。对于输入框组，请根据你的实际情况调整 right 值。
  
  
  控件尺寸
	通过 .input-lg  input-sm  类可以为控件设置高度，通过 .col-lg-* 类似的类可以为控件设置宽度。
  
  
  水平排列的表单组的尺寸
	通过添加 .form-group-lg 或 .form-group-sm 类，为 .form-horizontal 包裹的 label 元素和表单控件快速设置尺寸。
  
  
  
  
  
  
  
  
  
  
  
  按钮
  尺寸
	需要让按钮具有不同尺寸吗？使用 .btn-lg、.btn-sm 或 .btn-xs 可以获得不同尺寸的按钮。
    通过给按钮添加 .btn-block 类可以将其拉伸至父元素100%的宽度，而且按钮也变为了块级（block）元素。
  
  
  激活状态
	当按钮处于激活状态时，其表现为被按压下去（底色更深、边框夜色更深、向内投射阴影）。对于 <button> 元素，
	是通过 :active 状态实现的。对于 <a> 元素，是通过 .active 类实现的。然而，你还可以将 .active 应用到 <button> 上，
	并通过编程的方式使其处于激活状态。
  
  
  链接（<a>）元素
	可以为基于 <a> 元素创建的按钮添加 .active 类。
  
		<a href="#" class="btn btn-primary btn-lg active" role="button"></a>
		<a href="#" class="btn btn-default btn-lg active" role="button"></a>
  
  
  禁用状态
	通过为按钮的背景设置 opacity 属性就可以呈现出无法点击的效果。
  button 元素
	为 <button> 元素添加 disabled 属性，使其表现出禁用状态。
  我们把 .disabled 作为工具类使用，就像 .active 类一样，因此不需要增加前缀。	
	
  
  注：跨浏览器兼容性
	如果为 <button> 元素添加 disabled 属性，Internet Explorer 9 及更低版本的浏览器将会把按钮中的文本绘制为灰色，并带有恶心的阴影，目前我们还没有解决办法。
	
  
  注：上下文特定用法
      虽然按钮类可以应用到 <a> 和 <button> 元素上，但是，导航和导航条只支持 <button> 元素。
  
  
  注：跨浏览器展现
	我们总结的最佳实践是，强烈建议尽可能使用 <button> 元素来获得在各个浏览器上获得相匹配的绘制效果。
	另外，我们还发现了a bug in Firefox <30 版本的浏览器上出现的一个 bug ：阻止我们为基于 <input> 元素创建的按钮设置 line-height 属性，
	这就导致在 Firefox 浏览器上不能完全和其他按钮保持一致的高度。
  
  
  
  
  
  
  
  
  图片
  响应式图片
	在 Bootstrap 版本 3 中，通过为图片添加 .img-responsive 类可以让图片支持响应式布局。
	其实质是为图片设置了 max-width: 100%; 和 height: auto; 属性，从而让图片在其父元素中更好的缩放。
  
  注：SVG 图像和 IE 8-10
	在 Internet Explorer 8-10 中，设置为 .img-responsive 的 SVG 图像显示出的尺寸不匀称。为了解决这个问题，
	在出问题的地方添加 width: 100% \9; 即可。Bootstrap 并没有自动为所有图像元素设置这一属性，因为这会导致其他图像格式出现错乱。
  
  
  <img src="..." class="img-responsive" alt="Responsive image">
  
  
  图片形状
	通过为 <img> 元素添加以下相应的类，可以让图片呈现不同的形状。
  
  
  注：跨浏览器兼容性
	请时刻牢记：Internet Explorer 8 不支持 CSS3 中的圆角属性。
  
	<img src="..." alt="..." class="img-rounded">
	<img src="..." alt="..." class="img-circle">
	<img src="..." alt="..." class="img-thumbnail">
  
  
  关闭按钮
	通过使用一个象征关闭的图标，可以让模态框和警告框消失。
	<button type="button" class="close"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
  
  
  三角符号
	通过使用三角符号可以指示某个元素具有下拉菜单的功能。注意，向上弹出式菜单中的三角符号是反方向的。
	<span class="caret"></span>
  
  
  快速浮动
	<div class="pull-left">...</div>
	<div class="pull-right">...</div>
  
  清浮动   Clearfix
	通过向父元素添加.clearfix来轻松清除浮动
	<div class="clearfix">...</div>
  
  
  响应式工具
	
  
  
  
  
  
  
  
  

  