  
  
  Glyphicons 字体图标
	<span class="glyphicon glyphicon-search"></span>
  
  
  下拉菜单
	用于显示链接列表的可切换、有上下文的菜单。下拉菜单的 JavaScript 插件让它具有了交互性。
  
  
    <div class="dropdown">
		<button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown">
			Dropdown
			<span class="caret"></span>
		</button>
		<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
			<li role="presentation"><a role="menuitem" tabindex="-1" href="#">Action</a></li>
			<li role="presentation"><a role="menuitem" tabindex="-1" href="#">Another action</a></li>
			<li role="presentation"><a role="menuitem" tabindex="-1" href="#">Something else here</a></li>
			<li role="presentation"><a role="menuitem" tabindex="-1" href="#">Separated link</a></li>
		</ul>
	</div>
  
  
  对齐
	B默认情况下，下拉菜单自动沿着父元素的上沿和左侧被定位为 100% 宽度。 为 .dropdown-menu 添加 .dropdown-menu-right 类可以让菜单右对齐。
  
  
  注：在正常的文档流中，通过 CSS 为下拉菜单进行定位。这就意味着下拉菜单可能会由于设置了 overflow 属性的父元素而被部分遮挡或超出视口（viewport）的显示范围。
      如果出现这种问题，请自行解决。
  
  
  标题
	在任何下拉菜单中均可通过添加标题来标明一组动作。
  
  
  分割线
	为下拉菜单添加一条分割线，用于将多个链接分组。
  
  
  
  按钮组
  注：按钮组中的工具提示和弹出框需要特别的设置
	 当为 .btn-group 中的元素应用工具提示或弹出框时，必须指定 container: 'body' 选项，这样可以避免不必要的副作用
	（例如工具提示或弹出框触发时，会让页面元素变宽和/或失去圆角）。
  
  
    <div class="btn-group">
	    <button type="button" class="btn btn-default">Left</button>
	    <button type="button" class="btn btn-default">Middle</button>
	    <button type="button" class="btn btn-default">Right</button>
	</div>
  
  
  按钮工具栏
	把一组 <div class="btn-group"> 组合进一个 <div class="btn-toolbar"> 中就可以做成更复杂的组件。
  
  
    <div class="btn-toolbar" role="toolbar">
	    <div class="btn-group">...</div>
	    <div class="btn-group">...</div>
	    <div class="btn-group">...</div>
	</div>
  
  
  尺寸
	只要给 .btn-group 加上 .btn-group-* 类，就省去为按钮组中的每个按钮都赋予尺寸类了。
  btn-group-lg       btn-group       btn-group-sm       btn-group-xs
  
  
  嵌套
	想要把下拉菜单混合到一系列按钮中，只须把 .btn-group 放入另一个 .btn-group 中。
  
  
  垂直排列
	让一组按钮垂直堆叠排列显示而不是水平排列。分列式按钮下拉菜单不支持这种方式。
  
  
  两端对齐排列的按钮组
	让一组按钮拉长为相同的尺寸，填满父元素的宽度。对于按钮组中的按钮式下拉菜单也同样适用。
  
  
  注：关于边框的处理
	由于对两端对齐的按钮组使用了特定的 HTML 和 CSS （即 display: table-cell），两个按钮之间的边框叠加在
	了一起。在普通的按钮组中，margin-left: -1px 用于将边框重叠，而没有删除任何一个按钮的边框。然
	而，margin 属性不支持 display: table-cell。因此，根据你对 Bootstrap 的定制，你可以删除或重新为按钮的
	边框设置颜色。
  
  
  注：IE8 和边框
	Internet Explorer 8 不支持在两端对齐的按钮组中绘制边框，无论是 <a> 或 <button> 元素。为了照顾 IE8，把每
	个按钮放入另一个 .btn-group 中即可。
  
  
  按钮式下拉菜单
	把任意一个按钮放入 .btn-group 中，然后加入适当的菜单标签，就可以让按钮作为菜单的触发器了。
  
  
  单按钮下拉菜单
	只要改变一些基本的标记，就能把按钮变成下拉菜单的开关。
  
  
  分裂式按钮下拉菜单
	相似地，分裂式按钮下拉菜单也需要同样的改变一些标记，但只是多一个分开的按钮。
  
  
  向上弹出式菜单
	给父元素添加 .dropup 类就能使触发的下拉菜单朝上方打开。
  
  
  输入框组
	通过在文本输入框 <input> 前面、后面或是两边加上文字或按钮，可以实现对表单控件的扩展。为 .input-group 赋予
	.input-group-addon 类，可以给 .form-control 的前面或后面添加额外的元素。
  
  
  注：只支持文本输入框 <input>
	这里请避免使用 <select> 元素，因为 WebKit 浏览器不能完全绘制它的样式。
	避免使用 <textarea> 元素，由于它们的 rows 属性在某些情况下不被支持。
  
  
  注：输入框组中的工具提示和弹出框需要特别的设置
	为 .input-group 中所包含的元素应用工具提示（tooltip）或popover（弹出框）时，必须设置 container: 
	'body' 参数，为的是避免意外的副作用（例如，工具提示或弹出框被激活后，可能会让当前元素变得更宽或/和变
	得失去其圆角）。
	
	
  注：不要和其他组件混用
	不要将表单组或栅格列（column）类直接和输入框组混合使用。而是将输入框组嵌套到表单组或栅格相关元素的内部。
	
	
  尺寸
	为 .input-group 添加相应的尺寸类，其内部包含的元素将自动调整自身的尺寸。不需要为输入框组中的每个元素重复地添加控制尺寸的类。
	
	
  作为额外元素的多选框和单选框
	可以将多选框或单选框作为额外元素添加到输入框组中。
	

  作为额外元素的按钮
	为输入框组添加按钮需要额外添加一层嵌套，不是 .input-group-addon，而是添加 .input-group-btn 来包裹按钮元
	素。由于不同浏览器的默认样式无法被统一的重新赋值，所以才需要这样做。
  
  
  作为额外元素的按钮式下拉菜单
  作为额外元素的分裂式按钮下拉菜单
  
  
  
  
  
  导航
	Bootstrap 中的导航组件都依赖同一个 .nav 类，状态类也是共用的。改变修饰类可以改变样式。
  
  
  标签页
	<ul class="nav nav-tabs" role="tablist">
	    <li role="presentation" class="active"><a href="#">Home</a></li>
	    <li role="presentation"><a href="#">Profile</a></li>
	    <li role="presentation"><a href="#">Messages</a></li>
	</ul>
  
  
  胶囊式标签页
	HTML 标记相同，但使用 .nav-pills 类：
	<ul class="nav nav-pills" role="tablist">
	    <li role="presentation" class="active"><a href="#">Home</a></li>
	    <li role="presentation"><a href="#">Profile</a></li>
	    <li role="presentation"><a href="#">Messages</a></li>
	</ul>
  
  
  胶囊是标签页也是可以垂直方向堆叠排列的。只需添加 .nav-stacked 类。
	<ul class="nav nav-pills nav-stacked" role="tablist">
	    ...
	</ul>
  
  
  两端对齐的标签页
	在大于 768px 的屏幕上，通过 .nav-justified 类可以很容易的让标签页或胶囊式标签呈现出同等宽度。在小屏幕上，
	导航链接呈现堆叠样式。
  
  
  添加下拉菜单
	用一点点额外 HTML 代码并加入下拉菜单插件的 JavaScript 插件即可。
  
    <ul class="nav nav-tabs" role="tablist">
	  ...
	  <li role="presentation" class="dropdown">
		<a class="dropdown-toggle" data-toggle="dropdown" href="#">
		  Dropdown <span class="caret"></span>
		</a>
		<ul class="dropdown-menu" role="menu">
		  ...
		</ul>
	  </li>
	  ...
	</ul>
  
  
  
  
  导航条
  默认样式的导航条
	导航条是在您的应用或网站中作为导航页头的响应式基础组件。它们在移动设备上可以折叠（并且可开可关），且在视
	口（viewport）宽度增加时逐渐变为水平展开模式。
  
  
  表单
	将表单放置于 .navbar-form 之内可以呈现很好的垂直对齐，并在较窄的视口（viewport）中呈现折叠状态。 
	使用对齐选项可以规定其在导航条上出现的位置。
  
  
  注：为输入框添加 label 标签
	  如果你没有为输入框添加 label 标签，屏幕阅读器将会遇到问题。对于导航条内的表单，可以通过添加 .sr-only 类隐藏 label 标签。
  
  
  按钮
	对于不包含在 <form> 中的 <button> 元素，加上 .navbar-btn 后，可以让它在导航条里垂直居中。
  
  
  文本
	把文本包裹在 .navbar-text中时，为了有正确的行距和颜色，通常使用 <p> 标签。
  
  
  组件排列
	通过添加 .navbar-left 和 .navbar-right 工具类让导航链接、表单、按钮或文本对齐。两个类都会通过 CSS 设置特
	定方向的浮动样式。例如，要对齐导航链接，就要把它们放在个分开的、应用了工具类的 <ul> 标签里。
	这些类是 .pull-left 和 .pull-right 的 mixin 版本，但是他们被限定在了媒体查询（media query）中，这样可以更容
	易的在各种尺寸的屏幕上处理导航条组件。
  
  
  注：向右侧对齐多个组件
	导航条目前不支持多个 .navbar-right 类。为了让内容之间有合适的空隙，我们为最后一个 .navbar-right 元素
	使用负边距（margin）。如果有多个元素使用这个类，它们的边距（margin）将不能按照你的预期正常展现。
  
  
  固定在顶部
	添加 .navbar-fixed-top 类可以让导航条固定在顶部，还可包含一个 .container 或 .container-fluid 容器，从而让
	导航条居中，并在两侧添加内部（padding）。
  
  
  注：需要为 body 元素设置内部（padding）
	这个固定的导航条会遮住页面上的其它内容，除非你给 <body> 元素底部设置了 padding。用你自己的值，或用下面给出的代
	码都可以。提示：导航条的默认高度是 50px。
  
  
  固定在底部
	添加 .navbar-fixed-bottom 类可以让导航条固定在底部，并且还可以包含一个 .container 或 .container-fluid 容器，从而让导航条居中，并在两侧添加内部（padding）。
   
  注：问题同上
  
  
  静止在顶部
	通过添加 .navbar-static-top 类即可创建一个与页面等宽度的导航条，它会随着页面向下滚动而消失。还可以包含一个
	.container 或 .container-fluid 容器，用于将导航条居中对齐并在两侧添加内部（padding）。
  
  
	<nav class="navbar navbar-default navbar-static-top" role="navigation">
	  <div class="container">
		...
	  </div>
	</nav>
  
  
  反色的导航条
	通过添加 .navbar-inverse 类可以改变导航条的外观。
  
	<nav class="navbar navbar-inverse" role="navigation">
	  ...
	</nav>
  
  
  
  
  
  路径导航
	在一个带有层次的导航结构中标明当前页面的位置。
	各路径间的分隔符已经自动通过 CSS 的 :before 和 content 属性添加了。
  
  
	<ol class="breadcrumb">
	    <li><a href="#">Home</a></li>
	    <li><a href="#">Library</a></li>
	    <li class="active">Data</li>
	</ol>
	  
  
  分页
	为您的网站或应用提供带有展示页码的分页组件，或者可以使用简单的翻页组件。
  
	<nav>
	  <ul class="pagination">
		<li><a href="#">&laquo;</a></li>
		<li><a href="#">1</a></li>
		<li><a href="#">2</a></li>
		<li><a href="#">3</a></li>
		<li><a href="#">4</a></li>
		<li><a href="#">5</a></li>
		<li><a href="#">&raquo;</a></li>
	  </ul>
	</nav>
  
  尺寸
	想要更小或更大的分页？.pagination-lg 或 .pagination-sm 类提供了额外可供选择的尺寸。
  
  
  翻页
	用简单的标记和样式，就能做个上一页和下一页的简单翻页。用在像博客和杂志这样的简单站点上棒极了。
  
  
  
  标签
  
  徽章
	给链接、导航等元素嵌套 <span class="badge"> 元素，可以很醒目的展示新的或未读的信息条目。
  
  注：跨浏览器兼容性
	徽章组件在 Internet Explorer 8 浏览器中不会自动消失，因为 IE8 不支持 :empty 选择符。
  
  
  巨幕
	这是一个轻量、灵活的组件，它能延伸至整个浏览器视口来展示网站上的关键内容。
    如果需要让巨幕组件的宽度与浏览器宽度一致并且没有圆角，请把此组件放在所有 .container 元素的外面，并在组件
	内部添加一个 .container 元素。
  
  
  页头
	页头组件能够为 h1 标签增加适当的空间，并且与页面的其他部分形成一定的分隔。它支持 h1 标签内内嵌 small 元素
	的默认效果，还支持大部分其他组件（需要增加一些额外的样式）。
  
  
  缩略图
	通过缩略图组件扩展 Bootstrap 的 栅格系统，可以很容易地展示栅格样式的图像、视频、文本等内容。
  
  自定义内容
	添加一点点额外的标签，就可以把任何类型的 HTML 内容，例如标题、段落或按钮，加入缩略图组件内。
  
  
  
  警告框
	警告框组件通过提供一些灵活的预定义消息，为常见的用户动作提供反馈消息。
  
  可关闭的警告框
	为警告框添加一个可选的 .alert-dismissible 类和一个关闭按钮。
  
  
  
  进度条
	通过这些简单、灵活的进度条，为当前工作流程或动作提供实时反馈。
	
  
  注：跨浏览器兼容性
	进度条组件使用了 CSS3 的 transition 和 animation 属性来完成一些特效。这些特性在 Internet Explorer 9 或以下
	版本中、Firefox 的老版本中没有被支持。Opera 12 不支持 animation 属性。
  
  条纹效果
  
  动画效果
	为 .progress-bar-striped 添加 .active 类，使其呈现出由右向左运动的动画效果。IE9 及更低版本的浏览器不支持
  
  堆叠效果
  
  
  
  
  媒体对象
	这是一个抽象的样式，用以构建不同类型的组件，这些组件都具有在文本内容的左或右侧对齐的图片（就像博客评论或 
	Twitter 消息等）。
  
  
  列表组
	列表组是灵活又强大的组件，不仅能用于显示一组简单的元素，还能用于复杂的定制的内容。
	给列表组加入徽章组件，它会自动被放在右边。
  
  
  链接
	用 <a> 标签代替 <li> 标签可以组成一个全部是链接的列表组（还要注意的是，我们需要将 <ul> 标签替换为 <div>
	标签）。没必要给列表组中的每个元素都加一个父元素。
  
  
  情境类
	为列表中的条目添加情境类，默认样式或链接列表都可以。还可以为列表中的条目设置 .active 状态。
  
  
  定制内容
	列表组中的每个元素都可以是任何 HTML 内容，甚至是像下面的带链接的列表组。
  
  
  面版
	虽然不总是必须，但是某些时候你可能需要将某些 DOM 内容放到一个盒子里。对于这种情况，可以试试面板组件。
  
  
  带标题的面版
	通过 .panel-heading 可以很简单地为面板加入一个标题容器。你也可以通过添加设置了 .panel-title 类的
	<h1>-<h6> 标签，添加一个预定义样式的标题。
  
  
  带脚注的面版
	把按钮或次要的文本放入 .panel-footer 容器内。注意面版的脚注不会从情境效果中继承颜色，因为他们并不是主要内容。
  
  
  情境效果
	像其他组件一样，可以简单地通过加入有情境效果的状态类，给特定的内容使用更针对特定情境的面版。
  
  
  带表格的面版
	为面板中不需要边框的表格添加 .table 类，是整个面板看上去更像是一个整体设计。如果是带有 .panel-body 的面
	板，我们为表格的上方添加一个边框，看上去有分隔效果。
  
  
  注：如果没有 .panel-body ，面版标题会和表格连接起来，没有空隙。
  
  
  带列表组的面版
	可以简单地在任何面版中加入具有最大宽度的列表组。
  
  
  
  具有响应式特性的嵌入内容
	根据被嵌入内容的外部容器的宽度，自动创建一个固定的比例，从而让浏览器自动确定视频或 slideshow 的尺寸，能够在
	各种设备上缩放。
	这些规则被直接应用在 <iframe>、<embed>、<video> 和 <object> 元素上。如果你希望让最终样式与其他属性相匹
	配，还可以明确地使用一个派生出来的 .embed-responsive-item 类。
	超级提示： 不需要为 <iframe> 元素设置 frameborder="0" 属性，因为我们已经替你这样做了！
  
  
  Well
	把 Well 用在元素上，能有嵌入（inset）的的简单效果。
  
  
  
  
  
  
  
  
  
  